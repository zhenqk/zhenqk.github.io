<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>java 基础 字符</title>
      <link href="/2020/05/18/java-ji-chu-zi-fu/"/>
      <url>/2020/05/18/java-ji-chu-zi-fu/</url>
      
        <content type="html"><![CDATA[<h3 id="1-Java-语言基础-基本数据类型"><a href="#1-Java-语言基础-基本数据类型" class="headerlink" title="1. Java 语言基础-基本数据类型"></a>1. Java 语言基础-基本数据类型</h3><h4 id="1-HelloWorld程序的讲解"><a href="#1-HelloWorld程序的讲解" class="headerlink" title="1. HelloWorld程序的讲解"></a>1. HelloWorld程序的讲解</h4><p> <img src="/2020/05/18/java-ji-chu-zi-fu/1_10.png" alt="1586920600288"></p><ul><li>public、class、static、 void为关键字，固定写法</li><li>HelloWord 为类名，可以任意写</li><li>main 为函数或方法名，每个程序都有一个main函数做为入口，如同房间，需要有个门一样</li><li>main方法后面括号的内容称为参数</li><li>System. out. println(“HelloWord” )向控制台输入内容</li><li>注意:类名第一个字母要使用大写，花括号是成对出现的</li></ul><h4 id="2-常量的概述和使用"><a href="#2-常量的概述和使用" class="headerlink" title="2. 常量的概述和使用"></a>2. 常量的概述和使用</h4><h5 id="什么是常量"><a href="#什么是常量" class="headerlink" title="什么是常量"></a>什么是常量</h5><p>在程序执行的过程中其值不可以发生改变</p><h5 id="Java中常量的分类"><a href="#Java中常量的分类" class="headerlink" title="Java中常量的分类"></a>Java中常量的分类</h5><p>①字面值常量<br>②自定义常量(面向对象部分讲)</p><h5 id="字面值常量的分类"><a href="#字面值常量的分类" class="headerlink" title="字面值常量的分类"></a>字面值常量的分类</h5><p>①字符串常量用双引号括起来的内容      “Java”<br>②整数常量所有整数    1000<br>③小数常量所有小数   3.14       有效数字  float 6-7   double 15-16<br>④字符常量用单引号括起来的内容,里面只能放单个数字,单个字母或单个符号   ‘c’<br>⑤布尔常量较为特殊，只有true和false<br>⑥空常量null [数组部分]<br>win10 快速访问</p><h4 id="3-二-八-十六进制"><a href="#3-二-八-十六进制" class="headerlink" title="3. 二,八,十六进制"></a>3. 二,八,十六进制</h4><h5 id="什么是进制"><a href="#什么是进制" class="headerlink" title="什么是进制"></a>什么是进制</h5><p>  进制是一种进位方法。对于任何一种进制 X进制，就表示某-位置上的数 运算时逢X进一一位。</p><ul><li><p>二进制就是逢二进一，</p></li><li><p>八逆制是逢八进一，</p></li><li><p>十进制是逢十进一，</p></li><li><p>十六进制是逢十六进-一。</p></li><li><p>不同进制数据的Java表现形式</p><ul><li><p>二进制的数据表现形式 -一 由0,1组成。以0b(b可大小写)开头2= 10<br><code>System.out.print(0b10);</code></p></li><li><p>八进制的数据表现形式— 由0,1,…7组成。 以0开头[8= 10]</p><p><code>System.out.print(011);</code></p></li><li><p>十进制的数据表现形式—由0,1-9组成。整数默认是十进制的[10= 10]</p></li><li><p>十六进制的数据表现形式—由,1,–9,a,b,c,d,e,f(大小写均可)。以0x开头[16= 10]</p><p><code>System.out.print(0X16);</code>    </p></li></ul></li><li><p>注意:只有JDK1.7版本以上可以使用0b2来表示二进制</p></li></ul><h5 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h5><ul><li>在计算机中，只能识别二进制的数据，二进制就是0和1来表示的<br><img src="/2020/05/18/java-ji-chu-zi-fu/2_1.png" alt="1586920600288"><br> 如上图表示1个字节，一个字节有8个比特位(1lbyte =8bit)</li><li>字节是数据存储的基本单位</li><li>数据存储单位计算<br>1byte=8bit (比特)<br>1kb = 1024byte<br>1M = 1024kb<br>1G = 1024M<br>1T=1024G</li></ul><h5 id="二进制和十进制的转换"><a href="#二进制和十进制的转换" class="headerlink" title="二进制和十进制的转换"></a>二进制和十进制的转换</h5><ul><li>任意进制到十进制的转换原理<ul><li>系数:就是每一位上的数据。</li><li>基数: x进制，基数就是X.</li><li>权:在右边，从0开始编号，对应位上的编号即为该位的权。</li><li>结果:把系数*基数的权次幂相加即可。</li></ul></li><li>图解<br><img src="/2020/05/18/java-ji-chu-zi-fu/2_2.png" alt="1586920600288"></li></ul><h5 id="八进制到十进制的转换"><a href="#八进制到十进制的转换" class="headerlink" title="八进制到十进制的转换"></a>八进制到十进制的转换</h5><p> <img src="/2020/05/18/java-ji-chu-zi-fu/2_3.png" alt="1586920600288"></p><h5 id="十六进制到十进制的转换"><a href="#十六进制到十进制的转换" class="headerlink" title="十六进制到十进制的转换"></a>十六进制到十进制的转换</h5><p> <img src="/2020/05/18/java-ji-chu-zi-fu/2_4.png" alt="1586920600288"></p><h5 id="原码反码补码"><a href="#原码反码补码" class="headerlink" title="原码反码补码"></a>原码反码补码</h5><ul><li><p>有符号数据表示法的几种方式</p><ul><li><p>原码</p><ul><li><p>就是二进制定点表示法，即最高位为符号位，“0”表示正，“1”表示负，其余位表示数值的大小。    左边是最高位，右边最低位   </p><p>1111 1111 255</p></li></ul></li></ul></li></ul><pre><code>- 通过一个字节,也就是8个二进制位表示+7和-7- 0(符号位) 0000111     +7- 1(符号位) 0000111     -7</code></pre><ul><li><p>反码<br>正数的反码与其原码相同；负数的反码是对其原码逐位取反，但符号位除外。</p><p>eg. -7 1 000 0111（原码）</p><p>反码   11111 000</p></li><li><p>补码<br>正数的补码与其原码相同；负数的补码是在其反码的末位加1</p></li><li><p>-7的补码 1111 1001 </p></li></ul><ul><li><p><img src="/2020/05/18/java-ji-chu-zi-fu/2_5.png" alt="1586920600288"></p></li><li><p>原码反码补码练习</p><ul><li><p>已知原码求补码* 0b10110100</p><p>11001011+1    1100 1100</p></li><li><p>已知补码求原码* 0b11101110</p><p>1110 1110           1110  1101     -&gt;1001 0010</p></li></ul></li></ul><h4 id="4-变量和数据类型"><a href="#4-变量和数据类型" class="headerlink" title="4. 变量和数据类型"></a>4. 变量和数据类型</h4><ul><li>变量的概述及格式<ul><li>什么是变量<br>在程序执行的过程中，在某个范围内其值可以发生改变的量</li><li>变量的定义格式，[如同数据方程式xyz, 求值]<br>数据类型 变量名=变量值;<br>byte b= 127;</li><li>为什么要定义变量<br>用来不断的存放同类型的常量,并可以<code>重复使用</code></li></ul></li></ul><h4 id="5-基本数据类型的定义"><a href="#5-基本数据类型的定义" class="headerlink" title="5. 基本数据类型的定义"></a>5. 基本数据类型的定义</h4><ul><li><p>为什么有数据类型</p><ul><li>Java语言是强类型语言，对于每一种数据都定义了明确的具体数据类型，</li><li>每一种数据类型在内存中分配了不同大小的内存空间</li><li>这样做是为了充分高效的利用内存空间  -&gt;  2m的人  2m床</li></ul></li><li><p>Java中数据类型的分类<br>①基本数据类型<br>②引用数据类型(面向对象部分)</p></li><li><p>基本数据类型分类(4类8种)</p><ul><li>整数型:<br>byte (字节类型)  占一个字节 -2^7<del>2^7-1[-128</del>127]   </li></ul><p><code>不能把一个int 型转换为byte型</code></p><p>short 占两个字 -2^15~ 2^15-1 [ -32768<del>32767]<br>int      占四个字节-2^31</del>2^31-1 [-2^31=2147483647]<br>1ong  占八个字节- 2^63~ 2^63-1 [ -2^63=9223372036854775807]<br><code>写长整型时，加个L标识,可以写小写的l,但小写的l像一，不建议写  long d = -922L;System.out.println(d);</code></p></li><li><p>浮点型:<br>float单精度占四个字节 -3.403E38~3.403E38<br><code>单精度型使用F标识,不加F,默认就是双精度float e = 1.87312343F;//单精度型使用F标识System.out.println(e);</code></p></li></ul><p>double双精度占八个字节-1.798E308~1.798E308</p><ul><li>字符型: char占两个字节0~65535</li><li>布尔型: boolean java中boolean类型没有明确指定他的大小</li><li>基本数据类型定义的注意事项<ul><li>赋值时候注意float类型,long类型，加大写的F和L</li><li>作用域问题:同一个区域不能使用相同的变量名 </li><li>初始化值问题:局部变量在使用之前必须赋值</li><li>一条语句可以定义几个变量 eg: int a,b,c</li></ul></li></ul><h4 id="6-数据类型转换"><a href="#6-数据类型转换" class="headerlink" title="6.数据类型转换"></a>6.数据类型转换</h4><ul><li>Java中 的默认转换规则<ul><li>取值范围小的数据类型与取值范围大的数据类型进行运算会先将小的数据类型提升为大的.再运算</li><li>Java的运算是以<code>补码</code>形式运算的<br><img src="/2020/05/18/java-ji-chu-zi-fu/2_6.png" alt="1586920600288"><br>得到了结果是1000 0010   ==    -2  再转换为补码<br>强制类型转换会损失精度  </li></ul></li><li>数据类型相加的细节<ul><li>进行混合运算的时候,byte,short,char不会相互转换都会自动类型提升为int类型</li><li>byte,short,char与其他类型进行混合运算的是小的数据类型提升为大的</li></ul></li></ul><h4 id="7-面试题-long与float的取值范園谁大谁小"><a href="#7-面试题-long与float的取值范園谁大谁小" class="headerlink" title="7.面试题:long与float的取值范園谁大谁小"></a>7.面试题:long与float的取值范園谁大谁小</h4><p> <img src="/2020/05/18/java-ji-chu-zi-fu/2_8.png" alt="1586920600288"><br> <img src="/2020/05/18/java-ji-chu-zi-fu/2_9.png" alt="1586920600288"></p><ul><li>重点<br><img src="/2020/05/18/java-ji-chu-zi-fu/2_7.png" alt="1586920600288"></li></ul><h4 id="8-字符和字符串参与运算"><a href="#8-字符和字符串参与运算" class="headerlink" title="8.字符和字符串参与运算"></a>8.字符和字符串参与运算</h4><h5 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h5><ul><li>字符是指计算机中使用的字母、数字、字和符号，包括: 1、2、3、A、B、C、~，( )一一+等等。</li><li>在ASCII编码中，一个英文字母字符存储需要1个字节。</li><li>在GB2312编码或GBK编码中，一个汉字字符存储需要2个字节。</li><li>在UTF-8编码中，一个英文字母存储需要1个字节，一个汉字储存需要3到4个字节。</li></ul><h5 id="字符的定义"><a href="#字符的定义" class="headerlink" title="字符的定义"></a>字符的定义</h5><ul><li>使用char来定义字符类型</li><li>给char赋值时，如果是字母或者其它字符使用单引用号<br>如: char c=‘a’</li><li>给char 赋值时，可以直接使用asci表的数字<br>如: char c= 97</li><li>在ascii表中大写的与小写的相差32 </li></ul><h5 id="告白"><a href="#告白" class="headerlink" title="告白"></a>告白</h5><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c1 = <span class="number">73</span>;</span><br><span class="line"><span class="keyword">char</span> c2 = <span class="number">76</span>;</span><br><span class="line"><span class="keyword">char</span> c3 = <span class="number">111</span>;</span><br><span class="line"><span class="keyword">char</span> c4 = <span class="number">118</span>;</span><br><span class="line"><span class="keyword">char</span> c5 = <span class="number">101</span>;</span><br><span class="line"><span class="keyword">char</span> c6 = <span class="number">89</span>;</span><br><span class="line"><span class="keyword">char</span> c7 = <span class="number">111</span>;</span><br><span class="line"><span class="keyword">char</span> c8 = <span class="number">117</span>;</span><br></pre></td></tr></tbody></table></figure><h5 id="字符的相加"><a href="#字符的相加" class="headerlink" title="字符的相加"></a>字符的相加</h5><ul><li>字符相加会把字符对应的ascii数字相加</li><li><img src="/2020/05/18/java-ji-chu-zi-fu/2_10.png" alt="1111"></li></ul><h5 id="记住ASCII码的三个值："><a href="#记住ASCII码的三个值：" class="headerlink" title="记住ASCII码的三个值："></a>记住ASCII码的三个值：</h5><p>‘0’ 48<br>‘A’ 65<br>‘a’ 97</p><h5 id="字符与字符串相加"><a href="#字符与字符串相加" class="headerlink" title="字符与字符串相加"></a>字符与字符串相加</h5><p> <img src="/2020/05/18/java-ji-chu-zi-fu/2_11.png" alt="1586920600288"></p><h5 id="char数据与中文"><a href="#char数据与中文" class="headerlink" title="char数据与中文"></a>char数据与中文</h5><ul><li>char数据类型<br>char 在ascii编码中占1个字节 取值在0到127<br>char 在unicode编码中占2个字节 取值在0到65535</li></ul><h4 id="面试题"><a href="#面试题" class="headerlink" title="面试题:"></a>面试题:</h4><h5 id="Java语言中的字符char可以存储一个中文汉字吗-为什么呢"><a href="#Java语言中的字符char可以存储一个中文汉字吗-为什么呢" class="headerlink" title="Java语言中的字符char可以存储一个中文汉字吗?为什么呢?"></a>Java语言中的字符char可以存储一个中文汉字吗?为什么呢?</h5><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以。因为Java语言采用的是Unicode编码。Unicode编码中的每个字符占用两个字节。中文也是占的两个字节，utf-8编码是unicode中的一种编码，所以，Java中的字符可以存储一个中文汉字</span><br></pre></td></tr></tbody></table></figure><p>注:可以把编码类型改成ascii再打印中文给学生看，讲解为什么<br>GBK编码 ： 只能显示简体中文<br>GB2312编码:只能显示简体、繁体中文<br>Unicode编码：不仅可以存中文，还有可存日文，韩文(万国码)<br>-UTF-8 (万国码)<br>-UTF-16</p><h5 id="Unicode码"><a href="#Unicode码" class="headerlink" title="Unicode码"></a>Unicode码</h5><ul><li>Unicode是一种字符集，中、日、韩的三种文字占用了Unicode中0x3000到0x9FFF的部分 </li><li>Unicode采用的是UCS-2,用两个字节表示一个字符，2的16次方等于65536，最多能编码65536个字符</li><li>比如汉字“经”的编码是0x7ECF （字符码一般用16进制表示），转换成10进制就是32463</li><li>unicode编码从0到127的字符与ASCII编码的字符一样<ul><li>比如字母”a”的Unicode 编码是0x0061,十进制是97</li><li>而”a”的ASCII编码是0x61,十进制也是97</li></ul></li><li>对于汉字的编码，事实上Unicode对汉字支持不怎么好<ul><li>因为简体和繁体总共有六七万个汉字，而UCS-2最多能表示65536个，才六万 多个</li><li>所以Unicode只能排除一些几乎不用的汉字</li><li>好在常用的简体汉字 也不过七千多个</li><li>为了能表示所有汉字，Unicode也有UCS-4规范，就是用 4个字节来编码字符</li></ul></li></ul><h5 id="UTF-8编码"><a href="#UTF-8编码" class="headerlink" title="UTF-8编码"></a>UTF-8编码</h5><ul><li>UTF-8(8-bit Unicode Transformation Format)是一种针对Unicode的可变长度字符编码,又称万国码。项目开发中常用utf-8</li><li>查看部分unicode码表<br><a href="http://baike.baidu.com/item/Unicode%E5%AD%97%E7%AC%A6%E5%88%97%E8%A1%A8/12022016?sefr=cr" target="_blank" rel="noopener">http://baike.baidu.com/item/Unicode%E5%AD%97%E7%AC%A6%E5%88%97%E8%A1%A8/12022016?sefr=cr</a></li><li>在线unicode码转换<ul><li>网址: <a href="http://tool.chinaz.com/tools/unicode.aspx" target="_blank" rel="noopener">http://tool.chinaz.com/tools/unicode.aspx</a></li><li>演示a的unicode \u0061 0x61</li><li>演示中的unicode \u4e2d</li><li>熟记中文在unicode的范围 \u4E00-\u9FA5 19968 ~ 40869<br><img src="/2020/05/18/java-ji-chu-zi-fu/2_12.png" alt="1586920600288"></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>认识Java</title>
      <link href="/2020/05/17/sj/"/>
      <url>/2020/05/17/sj/</url>
      
        <content type="html"><![CDATA[<h3 id="1认识Java"><a href="#1认识Java" class="headerlink" title="1认识Java+"></a>1认识Java+</h3><p><img src="/2020/05/17/sj/banner.jpg" alt="banner"></p><h4 id="1-Java在公司里是用于干啥的-主要1和3"><a href="#1-Java在公司里是用于干啥的-主要1和3" class="headerlink" title="1. Java在公司里是用于干啥的?(主要1和3)"></a>1. Java在公司里是用于干啥的?(主要1和3)</h4><p>①Java web: 银行系统&amp;银行网站&amp;酒店系统&amp;N多后台管理系统   主要<br>②App: android是 用java写的，今年出了新的kotlin语言<br>③接口:为android、i0S等App提供数据访问接口    主要<br>④大数据(马云说过“大”是计算的意思)<br>⑤桌面应用(比较少开发桌面应用)<br>⑥….</p><h4 id="2-Java的招聘需求及薪资"><a href="#2-Java的招聘需求及薪资" class="headerlink" title="2. Java的招聘需求及薪资"></a>2. Java的招聘需求及薪资</h4><p> 拉钩</p><img src="/2020/05/17/sj/1_1.png" class="" title="This is an example image"><h4 id="3-Java的职业规划发展方向"><a href="#3-Java的职业规划发展方向" class="headerlink" title="3. Java的职业规划发展方向"></a>3. Java的职业规划发展方向</h4><ol><li>席丝java程序员</li><li>项目组组长:管理一个小团队</li><li>技术总监:主要把控项目中技术一块</li><li>软件系统架构师:负责整个项目的架构和技术实施方案（服务器 运维 并发  5年）</li><li>技术合伙人:公司的技术一把手，以技术来占公司股份，不需要花钱买（以技术入股）</li><li>软件营销:成为一个软件方面的销售高手</li><li>当IT讲师:传授你的工作经验</li><li>创业:与其他好友同事创业，开自己的公司，接外包或者做自己的产品</li><li>赚得一-定财富后，回老家开小店过小日子   (年薪20万    要有副业)</li></ol><h4 id="4-Java的就业前景和形势"><a href="#4-Java的就业前景和形势" class="headerlink" title="4. Java的就业前景和形势"></a>4. Java的就业前景和形势</h4><ol><li>领域非常广<br>Java技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于PC、数据中心、游戏控制台、科学超级计算机、移动电话和互联网，所以说Java的应用领域非常广，同时拥有全球最大的开发者专业社群</li><li>需求量大<br>Java是全球最流行的开发语言，我国的软件开发人才极为缺乏，其中java人才缺口最大，对java软件工程师的需求达到全部需求量的60% -70%，Java又 是安卓开发的基础，所以人才的需求又增加一大波。</li><li>就业方向非常广<br>学完可应聘java\h5\android\大数据架构师等职位。。。<br>Java是一一门世界最好的语言，学会了Java再学习其它语言php, ios, python等非常容易上手<br>一个星期或者半个月就可以做项目<br>总结:学了Java,你可以在招聘网上投递的职位非常多<br>需求量巨大</li></ol><h4 id="5-Java的学习方法和建议"><a href="#5-Java的学习方法和建议" class="headerlink" title="5.  Java的学习方法和建议"></a>5.  Java的学习方法和建议</h4><ol><li>跟着上课老师的课程大纲学习，掌握课堂知识点。</li><li>勤做笔记，如果上课走神或者没听懂的知识点，记下时间，再倒回去看视频。</li><li>复习时看视频，尽量1.5~2倍来看视频,课后多练代码。   写多了  就理解多了</li><li>尽量老师一边讲课，同学们一边写代码，当场掌握知识点。</li><li>不懂的多问老师与同学，因为毕业后，不一定才能能及时帮到你。</li><li>要有自己的思维，做一个功能或者需求时，想想有没有另一种方法。</li><li>多与同班同学交流，丰富情感生活，以后好互相推荐工作。</li><li>脑子累了要休息，尽量不要晚上通宵写代码，身体要紧。</li><li>每周或者两周要去参加一个活动,集体打球。</li><li>还有一点是学程序开发，有时是枯澡无味的，要忍住无聊和寂寞，特别是Java基础</li></ol><h4 id="6-学习前要谨记一些心态"><a href="#6-学习前要谨记一些心态" class="headerlink" title="6.  学习前要谨记一些心态"></a>6.  学习前要谨记一些心态</h4><ul><li>只要努力掌握课堂知识和老师的建议再加上自己的信心，找份较满意工资的工作是没有问题</li><li>一个班不可能每个都拿高薪，工资高的不一定是知识掌握的最好的那位同学。有时高薪看天<br>时地利人和</li><li>学习Java找工作，只是你的一一个起点，以后你还会学习其它的语言，或者说不干程序员这份<br>工作也说不定。(sina- 程序员辞职卖水果)</li><li>只要学精一门语言，不用怕以后这门语言不值钱，不用怕以后找不到工作。经验是最值钱的</li></ul><p>对自己要有信心&amp;工资量&amp;打牢固<br>公司看中经验</p><h3 id="2-计算机基础-amp-DOS"><a href="#2-计算机基础-amp-DOS" class="headerlink" title="2.计算机基础&amp;DOS"></a>2.计算机基础&amp;DOS</h3><h4 id="1-计算机简介"><a href="#1-计算机简介" class="headerlink" title="1. 计算机简介:"></a>1. 计算机简介:</h4><ul><li>计算机(computer) 俗称电脑，是现代一种用于高速计算的电子计算机器，是能够按照程序运<br>行，自动、高速处理海量数据的现代化智能电子设备。</li><li>计算机由硬件系统和软件系统所组成，没有安装任何软件的计算机称为裸机。</li><li>计算机可分为超级计算机、工业控制计算机、网络计算机、个人计算机、嵌入式计算机五类，<br>较先进的计算机有生物计算机、光子计算机、量子计算机等。</li><li>计算机发明者约翰.冯，诺依曼。计算机是20世纪最先进的科学技术发明之一</li><li>计算机的硬件分成5大组成部件:运算器、控制器、存储器、输入设备和输出设备。<ul><li>运算器、控制器合称为中央处理单元(Central ProcessingUnit, CPU)或处理器</li><li>存储器分为:<br>内部存储器(内存条) -重启电脑数据不在<br> 外部存储器(U盘、硬盘),重启电脑数据还在</li><li>输入设备有键盘、 鼠标等</li><li>输出设备有显示器、打印机等</li></ul></li></ul><h4 id="2-计算机的操作系统"><a href="#2-计算机的操作系统" class="headerlink" title="2. 计算机的操作系统"></a>2. 计算机的操作系统</h4><ul><li>操作系统(Operating System, 简称0S)是管理和控制计算机硬件与软件资源的<br>计算机程序，是直接运行在”裸机”上的最基本的系统软件，任何其他软件都必<br>须在操作系统的支持下才能运行。</li><li>常见的操作系统: Windows/Linux/MacOS/ Android/ iOS</li></ul><h4 id="3-计算机软件概念"><a href="#3-计算机软件概念" class="headerlink" title="3. 计算机软件概念"></a>3. 计算机软件概念</h4><ul><li>软件(中国大陆及香港用语，台湾称作软体，英文: Software)   app</li><li>软件是一系列按照特定顺序组织的计算机数据和指令的集合。</li><li>一般来讲软件被划分为<code>系统软件、应用软件</code>和介于这两者之间的中间件。</li><li>系统软件:windows/linux/macOS/ Android/i0S</li><li>应用软件:QQ WeChat 浏览器迅雷、后台系统等…</li></ul><h4 id="4-软件开发的概念"><a href="#4-软件开发的概念" class="headerlink" title="4. 软件开发的概念"></a>4. 软件开发的概念</h4><h5 id="什么是软件开发"><a href="#什么是软件开发" class="headerlink" title="什么是软件开发"></a>什么是软件开发</h5><p>借助开发工具与计算机语言制作软件</p><h5 id="什么是计算机语言"><a href="#什么是计算机语言" class="headerlink" title="什么是计算机语言"></a>什么是计算机语言</h5><p>人与计算机之间进行信息交流沟通的一种特殊语言</p><h5 id="计算机语言的分类"><a href="#计算机语言的分类" class="headerlink" title="计算机语言的分类"></a>计算机语言的分类</h5><ul><li>机器语言:<br>机器语言是直接用二进制代码指令表达的计算机语言，指令是用0和1组成的一串代码，它们有一定的位数，并分成若干段，各段的编码表示不同的含义。</li><li>汇编语言:<br>汇编语言是使用一些特殊的符号来代替机器语言的二进制码，计算机不能直接识别，需要用一种软件将汇编语言翻译成机器语言。</li><li>高级语言:<br>使用普通英语进行编写源代码，通过<code>编译器</code>将源代码翻译成计算机直接识别的机器语言，之后再由计算机执行。高级语言包括C,C++, C#, JAVA，PHP, Py thon</li></ul><h4 id="5-DOS命令"><a href="#5-DOS命令" class="headerlink" title="5. DOS命令"></a>5. DOS命令</h4><pre><code>DOS (`磁盘操作系统`)命令，是DOS操作系统的命令，是一种面向磁盘的操作命令，主要包括目录操作类命令、磁盘操作类命令、文件操作类命令和其它命令。常用命令如下:</code></pre><p>win+e 文件资源管理器 win+r 命令行</p><h5 id="1-查看目录内容命令dir"><a href="#1-查看目录内容命令dir" class="headerlink" title="1. 查看目录内容命令dir"></a>1. 查看目录内容命令<code>dir</code></h5><p>   <img src="/1_1.png" alt="1586910803670"></p><h5 id="2-打开指定目录命令-语法-cd路径"><a href="#2-打开指定目录命令-语法-cd路径" class="headerlink" title="2. 打开指定目录命令[语法: cd路径]"></a>2. 打开指定目录命令[语法: cd路径]</h5><p>   拖拽 </p><p>   2.1 同盘下(切换路径)</p><p>   <img src="/2020/05/17/sj/1_2.png" alt="1586911147759"></p><p>   2.2 异盘下(切换到D盘)</p><p>   <img src="/2020/05/17/sj/1_3.png" alt="1586911588039"></p><p>   2.3 特殊用法 ;返回当前盘的根路径</p><p>   <img src="/2020/05/17/sj/1_4.png" alt="1586911661427"></p><h5 id="3-创建目录命令-语法-md-文件夹名字-—mkdir-dir"><a href="#3-创建目录命令-语法-md-文件夹名字-—mkdir-dir" class="headerlink" title="3. 创建目录命令[语法:md 文件夹名字]  —mkdir dir"></a>3. 创建目录命令[语法:<code>md 文件夹名字</code>]  —mkdir dir</h5><h5 id="4-删除当前指定的目录-语法-rd-路径-–remove-123"><a href="#4-删除当前指定的目录-语法-rd-路径-–remove-123" class="headerlink" title="4. 删除当前指定的目录[语法:rd 路径]   –remove 123"></a>4. 删除当前指定的目录[语法:<code>rd 路径</code>]   –remove 123</h5><h5 id="5-创建文件-echo-a-gt-a-txt"><a href="#5-创建文件-echo-a-gt-a-txt" class="headerlink" title="5. 创建文件 echo a> a.txt"></a>5. 创建文件 <code>echo a&gt; a.txt</code></h5><h5 id="6-文件复制命令-语法-copy-源文件路径-目标文件路径"><a href="#6-文件复制命令-语法-copy-源文件路径-目标文件路径" class="headerlink" title="6. 文件复制命令[语法: copy 源文件路径 目标文件路径]"></a>6. 文件复制命令[语法: <code>copy 源文件路径 目标文件路径</code>]</h5><p>   <img src="/2020/05/17/sj/1_5.png" alt="1586912287262"></p><p>   执行效果相同</p><h5 id="7-显示文本文件内容命令-语法-type-文件名"><a href="#7-显示文本文件内容命令-语法-type-文件名" class="headerlink" title="7. 显示文本文件内容命令[语法: type 文件名]"></a>7. 显示文本文件内容命令[语法: <code>type 文件名</code>]</h5><h5 id="8-更改文件名命令-语法-ren-a-txt-a1-txt"><a href="#8-更改文件名命令-语法-ren-a-txt-a1-txt" class="headerlink" title="8. 更改文件名命令[语法: ren a.txt a1.txt]"></a>8. 更改文件名命令[语法: <code>ren a.txt a1.txt</code>]</h5><h5 id="9-删除文件命令-语法-del-a-txt-a1-txt-note-stuck-out-tongue-同时删除2个"><a href="#9-删除文件命令-语法-del-a-txt-a1-txt-note-stuck-out-tongue-同时删除2个" class="headerlink" title="9. 删除文件命令[语法: del a.txt a1.txt]  note :stuck_out_tongue:  同时删除2个"></a>9. 删除文件命令[语法: <code>del a.txt a1.txt</code>]  note :stuck_out_tongue:  同时删除2个</h5><h5 id="10-清除屏幕命令-cls"><a href="#10-清除屏幕命令-cls" class="headerlink" title="10. 清除屏幕命令 cls"></a>10. 清除屏幕命令 <code>cls</code></h5><h5 id="11-改变当前盘符命令d"><a href="#11-改变当前盘符命令d" class="headerlink" title="11. 改变当前盘符命令d:"></a>11. 改变当前盘符命令d:</h5><h5 id="12-查看环境变量path-or-echo-path"><a href="#12-查看环境变量path-or-echo-path" class="headerlink" title="12. 查看环境变量path  or  echo %path%"></a>12. 查看环境变量<code>path</code>  or  echo %path%</h5><h3 id="3-Java-开发环境的准备"><a href="#3-Java-开发环境的准备" class="headerlink" title="3.Java 开发环境的准备"></a>3.Java 开发环境的准备</h3><h4 id="1-Java语言发展史"><a href="#1-Java语言发展史" class="headerlink" title="1. Java语言发展史"></a>1. Java语言发展史</h4><ul><li>詹姆斯.高斯林(James Gosling) 1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得 了<code>美国卡内基梅隆大学</code>计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统， 但不受重视。后来转至Sun公司，1990年， 与Patrick, Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak” ，后改名为Java。</li><li>SUN (Stanford Uni versity Network, 斯坦福大学网络公司)</li><li>卡内基梅隆大学截至2017年卡耐基梅隆大学共培养出了12个图灵奖，20个诺贝尔奖，9个奥斯卡，114个艾米奖，44个托尼奖，非常牛逼的大学。</li><li>Java是一 门软件编程语言，可编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等</li><li>早期Sun公司研发 人员对C++进行改造，开发了一种称为Oak的面向对象语言</li><li>1995年，Sun公司将Oak更名为Java</li><li>1996年，Sun公司发布了Java的第一个开发工具包(JDK1.0)</li><li>1998年，第二代Java平台的企业版J2EE发布</li><li>1999年公司发布了第二代Java平台(简称为Java2)的3个版本<br>J2ME (Java2 Micro Edition, Java2平 台的微型版)，应用于移动、无线及有限资源的环境;<br>J2SE (Java 2 Standard Edition, Java 2平台的标准版)，应用于桌面环境;<br>J2EE (Java 2Enterprise Edition, Java 2平台的企业版)，应用于基于Java的应用服务器。</li><li>Java 2平台的发布，是Java发展过程中最重要的一个里程碑，标志着Java的应用开始普及。</li><li>2009年，甲骨文公司宣布收购Sun。</li><li>2010年，Java编程语言的共同创始人之一詹姆斯.高斯林(Java之父)从Oracle公司辞职。</li><li>2011年，甲骨文公司举行了全球性的活动，以庆祝Java7的推出，随后Java7正式发布。</li><li>2014年，甲骨文公司发布了Java8正式版。</li><li>2017年，甲骨文公司发布了Java9</li></ul><h4 id="2-Java语言版本"><a href="#2-Java语言版本" class="headerlink" title="2. Java语言版本"></a>2. Java语言版本</h4><p>   <img src="/2020/05/17/sj/1_6.png" alt="1586911661427"></p><p>老版本稳定，追求稳定</p><h4 id="3-Java语言特点"><a href="#3-Java语言特点" class="headerlink" title="3. Java语言特点"></a>3. Java语言特点</h4><pre><code>简单性、解释性、`面向对象`、`高性能`、分布式处理、多线程、健壮性、动态性、`安全性`、`跨平台`、移植性</code></pre><p>注:这是一道笔记题，需要记住</p><h4 id="4-Java语言跨平台原理"><a href="#4-Java语言跨平台原理" class="headerlink" title="4. Java语言跨平台原理"></a>4. Java语言跨平台原理</h4><h5 id="4-1-什么是跨平台性"><a href="#4-1-什么是跨平台性" class="headerlink" title="4.1 什么是跨平台性"></a>4.1 什么是跨平台性</h5><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开发的软件在任何操作系统(mac/window/linux)上都能安装并运行</span><br></pre></td></tr></tbody></table></figure><h5 id="4-2-Java语言跨平台原理"><a href="#4-2-Java语言跨平台原理" class="headerlink" title="4.2 Java语言跨平台原理"></a>4.2 Java语言跨平台原理</h5><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">只要在需要运行java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine) 即可。由JVM来负责Java程序在该系统中的运行。</span><br></pre></td></tr></tbody></table></figure><h5 id="4-3-Java语言跨平台图解"><a href="#4-3-Java语言跨平台图解" class="headerlink" title="4.3 Java语言跨平台图解"></a>4.3 Java语言跨平台图解</h5><p><img src="/2020/05/17/sj/1_7.png" alt="1586911661427"></p><h5 id="4-4-write-once-，run-anywhere-一处编译-到处运行"><a href="#4-4-write-once-，run-anywhere-一处编译-到处运行" class="headerlink" title="4.4 write once ，run anywhere!(一处编译,到处运行)"></a>4.4 write once ，run anywhere!(一处编译,到处运行)</h5><h4 id="5-JRE和JDK的概述"><a href="#5-JRE和JDK的概述" class="headerlink" title="5. JRE和JDK的概述"></a>5. JRE和JDK的概述</h4><h5 id="5-1-什么是JRE-Java-Runtime-Environment"><a href="#5-1-什么是JRE-Java-Runtime-Environment" class="headerlink" title="5.1 什么是JRE (Java Runtime Environment)"></a>5.1 什么是JRE (Java Runtime Environment)</h5><ul><li>JRE包括Java虛拟机(JVM Java Virtual Machine)和Java程序所需的核心类库(jar 包)等</li><li>如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。（java-&gt;jar）</li><li>总的说JRE = JVM +核心类库</li></ul><h5 id="5-2-什么是JDK-Java-Development-Kit"><a href="#5-2-什么是JDK-Java-Development-Kit" class="headerlink" title="5.2 什么是JDK (Java Development Kit)"></a>5.2 什么是JDK (Java Development Kit)</h5><ul><li>JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。</li><li><code>所以安装了JDK,就不用在单独安装JRE了</code>。</li><li>java的开发工具有:<code>编译工具(javac)</code>、 <code>打包工具(jar)</code>等</li><li>JDK=JRE+JAVA的开发工具。</li><li>JDK=JVM+核心类库+ Java开发工具(javac, jar..)</li></ul><h5 id="5-3-JDK-JRE-JVM的作用和关系"><a href="#5-3-JDK-JRE-JVM的作用和关系" class="headerlink" title="5.3 JDK, JRE, JVM的作用和关系"></a>5.3 JDK, JRE, JVM的作用和关系</h5><p>  JDK包含JRE，而JRE包含JVM， 总的来说JDK是用于java程序的开发，而jre则是只</p><h5 id="5-4-能运行class而没有编译的功能，最后用张网络图片总结下"><a href="#5-4-能运行class而没有编译的功能，最后用张网络图片总结下" class="headerlink" title="5.4 能运行class而没有编译的功能，最后用张网络图片总结下"></a>5.4 能运行class而没有编译的功能，最后用张网络图片总结下</h5><p> <img src="/2020/05/17/sj/1_8.png" alt="1586911661427"></p><ul><li>总结:<br>JDK:主要用于编译<br>JRE:主要作用看运行效果<br>JVM:主要作用跨平台，负责Java程序的调用</li></ul><h4 id="6-JDK的下载和安装过程图解"><a href="#6-JDK的下载和安装过程图解" class="headerlink" title="6. JDK的下载和安装过程图解"></a>6. JDK的下载和安装过程图解</h4><h5 id="6-1-JDK的下载地址"><a href="#6-1-JDK的下载地址" class="headerlink" title="6.1 JDK的下载地址"></a>6.1 JDK的下载地址</h5><ul><li><code>https://www.oracle.com/java/technologies/javase-downloads.html</code></li><li>Sun被oracle收购，地址都可以，访问sun会跳转到oracle</li></ul><h5 id="6-2-JDK的安装"><a href="#6-2-JDK的安装" class="headerlink" title="6.2 JDK的安装"></a>6.2 JDK的安装</h5><p>  下载对应操作系统平台的JDK,这里下载1.8的windows平台然后傻瓜式安装，下一步下一步<br>  验证安装是否成功</p><ul><li><p>如果安装 了JDK, JDK的安装路径在C: \Program Files\Java\jdk1.8.0_ 131路径下</p></li><li><p>在cmd中可以输入java -version来查看jdk的版本</p><p>可安装共存:1.7和 1.8 共存</p></li></ul><h4 id="7-JDK的删除和自定义安装路径"><a href="#7-JDK的删除和自定义安装路径" class="headerlink" title="7. JDK的删除和自定义安装路径"></a>7. JDK的删除和自定义安装路径</h4><ol><li>删除JDK不能直接把Java的home目录文件夹删除了，这种操作是不正确</li><li>正确的删除JDK是要来到 “ 控制面板\所有控制面板项\程序和功能”进行删除，</li><li>JDK安装路径可以自己定义， 个人喜好，我就不喜欢改。</li><li>什么时候需要更改jdk的安装路径<br>■当默认的c盘没有空 间的时候，可以改成D盘</li></ol><h4 id="8-JDK安装路径下的目录解释"><a href="#8-JDK安装路径下的目录解释" class="headerlink" title="8. JDK安装路径下的目录解释"></a>8. JDK安装路径下的目录解释</h4><ul><li>在jdk的Home中，会有如下图的结构<br><img src="/2020/05/17/sj/1_9.png" alt="1586911661427"><ul><li>Home 目录路径C: \Program Fi les\JavaXjdk1.8.0131,又称jdk主目录<ul><li>bin:该目录用于存放一些可执行程序，如javac ( java编译器)、java(java运行 工具)，jar(打包工具)和javadoc(文档生成工具)等</li><li>db:db目录是一个小型的数据库，从JDK 6. 0开始，Java中引用了一个新的成员JavaDB, 这是一个纯Java实现、开源的数据库管理系统。这个数据库不仅轻便，而且支持JDBC 4. 0所有的规范，在学习JDBC 时，不再需要额外地安装一个数据库软件，选择直接使用JavaDB即可。</li><li>jre: “jre”是Java Runt ime Environment 的缩写，意为Java程序运行时环境。此目录是Java运行时环境的根目录，它包括Java虚拟机，运行时的类包，Java应用启动器以及-个bin目录，但不包含开发环境中的开发工具。</li><li>include: 由于JDK是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。</li><li>1ib: 1ib是1ibrary的缩写， 意为Java 类库或库文件，是开发工具使用的归档包文件。</li><li>src. zip文件: src. zip为src文件夹的压缩文件，src中放置的是JDK核心类的源代码， 通过该文件可以查看Java基础类的源代码。</li></ul></li></ul></li></ul><h4 id="9-第一个Java程序，-Hel-loWord案例的编写与编译-命令行方式"><a href="#9-第一个Java程序，-Hel-loWord案例的编写与编译-命令行方式" class="headerlink" title="9.第一个Java程序， Hel loWord案例的编写与编译(命令行方式)"></a>9.第一个Java程序， Hel loWord案例的编写与编译(命令行方式)</h4><ul><li><p>编写Java源代码，以.java结尾<br><img src="/2020/05/17/sj/1_10.png" alt="1586911661427"></p></li><li><p>打开终端cmd,进入到jdk的bin目录，cd “C:\ Program Files\Java\jdk1.8.0_ 131\bin”</p></li><li><p>编译java文件，终端中输入javac HelloWorld.java的全路径</p></li><li><p>执行class文件,终端输入java HelloWorld,不需要加.class后缀<br>Java程序运行流程[记住]<br>①编写java文件<br>②编译java文件，获得一个.class文件<br>③运行.class文件 看到效果</p></li><li><p>遇到问题</p><p><img src="/2020/05/17/sj/1_11.png" alt="1586920600288"></p></li></ul><h4 id="10-Javac-amp-Java命令执行的路径"><a href="#10-Javac-amp-Java命令执行的路径" class="headerlink" title="10. Javac&amp;Java命令执行的路径"></a>10. Javac&amp;Java命令执行的路径</h4><ul><li>Javac是一个将. java编译成. class文件命令</li><li>javac命令的具体路径是C: \Program Files\Java\jdk1. 8.0_ 131bin</li><li>在终端cmd输入java - version, Java的命令执行的路径是在Path的<br>C: \PrbgramData \0racl e\Java\javapath</li><li>如果在命令行执行javac HelloWorld. java 返回‘javac’ 不是内部或外部命令，也不是可运行的程序，或批处理文件。说明在当前路径找不到Javac命令</li></ul><h4 id="11-Java环境变量Path配置"><a href="#11-Java环境变量Path配置" class="headerlink" title="11. Java环境变量Path配置"></a>11. Java环境变量Path配置</h4><ul><li>目的: 不需要进入到bin目录，也可执行bin目录下的命令javac</li><li>方法步骤- windows10的操作:</li></ul><ol><li>点击:此电脑-右键属性-高级系统设置-高级-环境变量</li><li>在系统变量中新建JAVA_ HOME=C: \Program Files\Java\jdk1.8.0_ 131</li><li>在系统变量中编辑Path,在后面追加路径%JAVA_ HOME%\bin (注:是右斜杠)</li><li>在命令行可以输入echo %JAVA HOME%\bin 来查看环境变量</li></ol><ul><li>通过上面的努力， 你就可以在任意目录编译. java文件了<br>MacOs：  .bash_profile</li></ul><h4 id="12-CLASSPATH变量配置"><a href="#12-CLASSPATH变量配置" class="headerlink" title="12. CLASSPATH变量配置"></a>12. CLASSPATH变量配置</h4><ul><li>jvm在 查找class文件时如果没有设置classpath会在当前路径查找，设置classpath后<code>仅在classpath路径下</code>查找class文件即可。</li><li>classpath 不是必须配置的</li><li>一旦修改了环境变量的东西，一定要重新启动cmd命令行<br>echo %classpath%<br>补: cd.. 切换到上一个路径</li></ul><h3 id="4-Java开发工具Eclipse"><a href="#4-Java开发工具Eclipse" class="headerlink" title="4. Java开发工具Eclipse"></a>4. Java开发工具Eclipse</h3><h4 id="1-常用的Java-IDE开发工具"><a href="#1-常用的Java-IDE开发工具" class="headerlink" title="1. 常用的Java IDE开发工具"></a>1. 常用的Java IDE开发工具</h4><ul><li>为什么会有Java IDE开发工具，如果像以前那样在终端通过命令行来编译执行java文件，一旦<br>文件比较多，是件多么折腾的一件事。所以有很多开发工具，来简化我们的开发工作。</li><li>集成开发环境(IDE， Integrated Deve lopment Environment )是用于提供程序开发环境的应用程序，一般包括代码编辑器、编译器、调试器和图形用户界面等工具。</li><li>常见的Java开发工具有，工作中掌握Eclipse即可<br>①Editplus 少<br>②Sublime Text  少<br>③Eclipse (工作中常用，200多M)  免费<br>④MyEclipse(至 少1G)<br>⑤IntelliJ IDEA (500多M)  多</li><li>注:掌握了Eclipse, MyEclipse, IDEA也自然会用，因为他们长的两差不多</li></ul><h4 id="2-Eclipse历史版本-Neon"><a href="#2-Eclipse历史版本-Neon" class="headerlink" title="2. Eclipse历史版本  Neon"></a>2. Eclipse历史版本  Neon</h4><p> <img src="/2020/05/17/sj/1_12.png" alt="1586920600288"></p><h4 id="3-Eclipse的下载与安装"><a href="#3-Eclipse的下载与安装" class="headerlink" title="3. Eclipse的下载与安装"></a>3. Eclipse的下载与安装</h4><ul><li>进入eclipse的 下载页面<code>https://www.eclipse.org/downloads/packages/</code></li><li>然后在页面中，选择红色框的下载，下载后得到一个eclipse-jee neon-3-win32-<br>x86_ 64.zip文 件</li><li>然后解压zip,直接点击解压后文件夹中的eclipse.exe即可使用 -&gt;发送快捷方式<br>注意:下载Eclipse-Neon的版本，一定要安装jdk1.8<br>现在最新版本是eclipse-jee -oxygen-1a-win32 x86_ 64.zip [oxygen:氧气 ]<br>建议项目名格式 wzq_day01_20170206</li></ul><h4 id="3-Eclipse的区域与字体调整"><a href="#3-Eclipse的区域与字体调整" class="headerlink" title="3. Eclipse的区域与字体调整"></a>3. Eclipse的区域与字体调整</h4><p> <img src="/2020/05/17/sj/1_14.png" alt="1586920600288"></p><ul><li>调整Eclipse的字体大小<ul><li>第一种方式:<ul><li>点击Eclipse的Window Prefernces偏好设置，</li><li>找到General-Appearance Colors and Fonts. 再找到Basic </li><li>然后点击Text Font来 调字体大小</li></ul></li><li>第二种方式:<ul><li>neon<br>版本的eclipse可以通过[ctrl +、-]来更改文字大小<br>注:有些旧版本不支持这种方式，所以只能使用第一种</li></ul></li></ul></li></ul><h4 id="4-项目的导入和删除"><a href="#4-项目的导入和删除" class="headerlink" title="4.项目的导入和删除"></a>4.项目的导入和删除</h4><p>Project Explorer 下 选择 import -&gt;General-&gt;Existing Projects into Workspace</p><p>注释 ctrl+shift+/<br>ctrl+/</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/05/16/hello-world/"/>
      <url>/2020/05/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>认识Java</title>
      <link href="/2019/05/17/java1/"/>
      <url>/2019/05/17/java1/</url>
      
        <content type="html"><![CDATA[<h3 id="1认识Java"><a href="#1认识Java" class="headerlink" title="1认识Java+"></a>1认识Java+</h3><p><img src="/2019/05/17/java1/banner.jpg" alt="banner"></p><h4 id="1-Java在公司里是用于干啥的-主要1和3"><a href="#1-Java在公司里是用于干啥的-主要1和3" class="headerlink" title="1. Java在公司里是用于干啥的?(主要1和3)"></a>1. Java在公司里是用于干啥的?(主要1和3)</h4><p>①Java web: 银行系统&amp;银行网站&amp;酒店系统&amp;N多后台管理系统   主要<br>②App: android是 用java写的，今年出了新的kotlin语言<br>③接口:为android、i0S等App提供数据访问接口    主要<br>④大数据(马云说过“大”是计算的意思)<br>⑤桌面应用(比较少开发桌面应用)<br>⑥….</p><h4 id="2-Java的招聘需求及薪资"><a href="#2-Java的招聘需求及薪资" class="headerlink" title="2. Java的招聘需求及薪资"></a>2. Java的招聘需求及薪资</h4><p> 拉钩</p><h4 id="3-Java的职业规划发展方向"><a href="#3-Java的职业规划发展方向" class="headerlink" title="3. Java的职业规划发展方向"></a>3. Java的职业规划发展方向</h4><ol><li>席丝java程序员</li><li>项目组组长:管理一个小团队</li><li>技术总监:主要把控项目中技术一块</li><li>软件系统架构师:负责整个项目的架构和技术实施方案（服务器 运维 并发  5年）</li><li>技术合伙人:公司的技术一把手，以技术来占公司股份，不需要花钱买（以技术入股）</li><li>软件营销:成为一个软件方面的销售高手</li><li>当IT讲师:传授你的工作经验</li><li>创业:与其他好友同事创业，开自己的公司，接外包或者做自己的产品</li><li>赚得一-定财富后，回老家开小店过小日子   (年薪20万    要有副业)</li></ol><h4 id="4-Java的就业前景和形势"><a href="#4-Java的就业前景和形势" class="headerlink" title="4. Java的就业前景和形势"></a>4. Java的就业前景和形势</h4><ol><li>领域非常广<br>Java技术具有卓越的通用性、高效性、平台移植性和安全性，广泛应用于PC、数据中心、游戏控制台、科学超级计算机、移动电话和互联网，所以说Java的应用领域非常广，同时拥有全球最大的开发者专业社群</li><li>需求量大<br>Java是全球最流行的开发语言，我国的软件开发人才极为缺乏，其中java人才缺口最大，对java软件工程师的需求达到全部需求量的60% -70%，Java又 是安卓开发的基础，所以人才的需求又增加一大波。</li><li>就业方向非常广<br>学完可应聘java\h5\android\大数据架构师等职位。。。<br>Java是一一门世界最好的语言，学会了Java再学习其它语言php, ios, python等非常容易上手<br>一个星期或者半个月就可以做项目<br>总结:学了Java,你可以在招聘网上投递的职位非常多<br>需求量巨大</li></ol><h4 id="5-Java的学习方法和建议"><a href="#5-Java的学习方法和建议" class="headerlink" title="5.  Java的学习方法和建议"></a>5.  Java的学习方法和建议</h4><ol><li>跟着上课老师的课程大纲学习，掌握课堂知识点。</li><li>勤做笔记，如果上课走神或者没听懂的知识点，记下时间，再倒回去看视频。</li><li>复习时看视频，尽量1.5~2倍来看视频,课后多练代码。   写多了  就理解多了</li><li>尽量老师一边讲课，同学们一边写代码，当场掌握知识点。</li><li>不懂的多问老师与同学，因为毕业后，不一定才能能及时帮到你。</li><li>要有自己的思维，做一个功能或者需求时，想想有没有另一种方法。</li><li>多与同班同学交流，丰富情感生活，以后好互相推荐工作。</li><li>脑子累了要休息，尽量不要晚上通宵写代码，身体要紧。</li><li>每周或者两周要去参加一个活动,集体打球。</li><li>还有一点是学程序开发，有时是枯澡无味的，要忍住无聊和寂寞，特别是Java基础</li></ol><h4 id="6-学习前要谨记一些心态"><a href="#6-学习前要谨记一些心态" class="headerlink" title="6.  学习前要谨记一些心态"></a>6.  学习前要谨记一些心态</h4><ul><li>只要努力掌握课堂知识和老师的建议再加上自己的信心，找份较满意工资的工作是没有问题</li><li>一个班不可能每个都拿高薪，工资高的不一定是知识掌握的最好的那位同学。有时高薪看天<br>时地利人和</li><li>学习Java找工作，只是你的一一个起点，以后你还会学习其它的语言，或者说不干程序员这份<br>工作也说不定。(sina- 程序员辞职卖水果)</li><li>只要学精一门语言，不用怕以后这门语言不值钱，不用怕以后找不到工作。经验是最值钱的</li></ul><p>对自己要有信心&amp;工资量&amp;打牢固<br>公司看中经验</p><h3 id="2-计算机基础-amp-DOS"><a href="#2-计算机基础-amp-DOS" class="headerlink" title="2.计算机基础&amp;DOS"></a>2.计算机基础&amp;DOS</h3><h4 id="1-计算机简介"><a href="#1-计算机简介" class="headerlink" title="1. 计算机简介:"></a>1. 计算机简介:</h4><ul><li>计算机(computer) 俗称电脑，是现代一种用于高速计算的电子计算机器，是能够按照程序运<br>行，自动、高速处理海量数据的现代化智能电子设备。</li><li>计算机由硬件系统和软件系统所组成，没有安装任何软件的计算机称为裸机。</li><li>计算机可分为超级计算机、工业控制计算机、网络计算机、个人计算机、嵌入式计算机五类，<br>较先进的计算机有生物计算机、光子计算机、量子计算机等。</li><li>计算机发明者约翰.冯，诺依曼。计算机是20世纪最先进的科学技术发明之一</li><li>计算机的硬件分成5大组成部件:运算器、控制器、存储器、输入设备和输出设备。<ul><li>运算器、控制器合称为中央处理单元(Central ProcessingUnit, CPU)或处理器</li><li>存储器分为:<br>内部存储器(内存条) -重启电脑数据不在<br> 外部存储器(U盘、硬盘),重启电脑数据还在</li><li>输入设备有键盘、 鼠标等</li><li>输出设备有显示器、打印机等</li></ul></li></ul><h4 id="2-计算机的操作系统"><a href="#2-计算机的操作系统" class="headerlink" title="2. 计算机的操作系统"></a>2. 计算机的操作系统</h4><ul><li>操作系统(Operating System, 简称0S)是管理和控制计算机硬件与软件资源的<br>计算机程序，是直接运行在”裸机”上的最基本的系统软件，任何其他软件都必<br>须在操作系统的支持下才能运行。</li><li>常见的操作系统: Windows/Linux/MacOS/ Android/ iOS</li></ul><h4 id="3-计算机软件概念"><a href="#3-计算机软件概念" class="headerlink" title="3. 计算机软件概念"></a>3. 计算机软件概念</h4><ul><li>软件(中国大陆及香港用语，台湾称作软体，英文: Software)   app</li><li>软件是一系列按照特定顺序组织的计算机数据和指令的集合。</li><li>一般来讲软件被划分为<code>系统软件、应用软件</code>和介于这两者之间的中间件。</li><li>系统软件:windows/linux/macOS/ Android/i0S</li><li>应用软件:QQ WeChat 浏览器迅雷、后台系统等…</li></ul><h4 id="4-软件开发的概念"><a href="#4-软件开发的概念" class="headerlink" title="4. 软件开发的概念"></a>4. 软件开发的概念</h4><h5 id="什么是软件开发"><a href="#什么是软件开发" class="headerlink" title="什么是软件开发"></a>什么是软件开发</h5><p>借助开发工具与计算机语言制作软件</p><h5 id="什么是计算机语言"><a href="#什么是计算机语言" class="headerlink" title="什么是计算机语言"></a>什么是计算机语言</h5><p>人与计算机之间进行信息交流沟通的一种特殊语言</p><h5 id="计算机语言的分类"><a href="#计算机语言的分类" class="headerlink" title="计算机语言的分类"></a>计算机语言的分类</h5><ul><li>机器语言:<br>机器语言是直接用二进制代码指令表达的计算机语言，指令是用0和1组成的一串代码，它们有一定的位数，并分成若干段，各段的编码表示不同的含义。</li><li>汇编语言:<br>汇编语言是使用一些特殊的符号来代替机器语言的二进制码，计算机不能直接识别，需要用一种软件将汇编语言翻译成机器语言。</li><li>高级语言:<br>使用普通英语进行编写源代码，通过<code>编译器</code>将源代码翻译成计算机直接识别的机器语言，之后再由计算机执行。高级语言包括C,C++, C#, JAVA，PHP, Py thon</li></ul><h4 id="5-DOS命令"><a href="#5-DOS命令" class="headerlink" title="5. DOS命令"></a>5. DOS命令</h4><p>​        DOS (<code>磁盘操作系统</code>)命令，是DOS操作系统的命令，是一种面向磁盘的操作命令，主要包括目录操作类命令、磁盘操作类命令、文件操作类命令和其它命令。常用命令如下:</p><p>win+e 文件资源管理器 win+r 命令行</p><h5 id="1-查看目录内容命令dir"><a href="#1-查看目录内容命令dir" class="headerlink" title="1. 查看目录内容命令dir"></a>1. 查看目录内容命令<code>dir</code></h5><p>   <img src="/1_1.png" alt="1586910803670"></p><h5 id="2-打开指定目录命令-语法-cd路径"><a href="#2-打开指定目录命令-语法-cd路径" class="headerlink" title="2. 打开指定目录命令[语法: cd路径]"></a>2. 打开指定目录命令[语法: cd路径]</h5><p>   拖拽 </p><p>   2.1 同盘下(切换路径)</p><p>   <img src="/2019/05/17/java1/1_2.png" alt="1586911147759"></p><p>   2.2 异盘下(切换到D盘)</p><p>   <img src="/2019/05/17/java1/1_3.png" alt="1586911588039"></p><p>   2.3 特殊用法 ;返回当前盘的根路径</p><p>   <img src="/2019/05/17/java1/1_4.png" alt="1586911661427"></p><h5 id="3-创建目录命令-语法-md-文件夹名字-—mkdir-dir"><a href="#3-创建目录命令-语法-md-文件夹名字-—mkdir-dir" class="headerlink" title="3. 创建目录命令[语法:md 文件夹名字]  —mkdir dir"></a>3. 创建目录命令[语法:<code>md 文件夹名字</code>]  —mkdir dir</h5><h5 id="4-删除当前指定的目录-语法-rd-路径-–remove-123"><a href="#4-删除当前指定的目录-语法-rd-路径-–remove-123" class="headerlink" title="4. 删除当前指定的目录[语法:rd 路径]   –remove 123"></a>4. 删除当前指定的目录[语法:<code>rd 路径</code>]   –remove 123</h5><h5 id="5-创建文件-echo-a-gt-a-txt"><a href="#5-创建文件-echo-a-gt-a-txt" class="headerlink" title="5. 创建文件 echo a> a.txt"></a>5. 创建文件 <code>echo a&gt; a.txt</code></h5><h5 id="6-文件复制命令-语法-copy-源文件路径-目标文件路径"><a href="#6-文件复制命令-语法-copy-源文件路径-目标文件路径" class="headerlink" title="6. 文件复制命令[语法: copy 源文件路径 目标文件路径]"></a>6. 文件复制命令[语法: <code>copy 源文件路径 目标文件路径</code>]</h5><p>   <img src="/2019/05/17/java1/1_5.png" alt="1586912287262"></p><p>   执行效果相同</p><h5 id="7-显示文本文件内容命令-语法-type-文件名"><a href="#7-显示文本文件内容命令-语法-type-文件名" class="headerlink" title="7. 显示文本文件内容命令[语法: type 文件名]"></a>7. 显示文本文件内容命令[语法: <code>type 文件名</code>]</h5><h5 id="8-更改文件名命令-语法-ren-a-txt-a1-txt"><a href="#8-更改文件名命令-语法-ren-a-txt-a1-txt" class="headerlink" title="8. 更改文件名命令[语法: ren a.txt a1.txt]"></a>8. 更改文件名命令[语法: <code>ren a.txt a1.txt</code>]</h5><h5 id="9-删除文件命令-语法-del-a-txt-a1-txt-note-stuck-out-tongue-同时删除2个"><a href="#9-删除文件命令-语法-del-a-txt-a1-txt-note-stuck-out-tongue-同时删除2个" class="headerlink" title="9. 删除文件命令[语法: del a.txt a1.txt]  note :stuck_out_tongue:  同时删除2个"></a>9. 删除文件命令[语法: <code>del a.txt a1.txt</code>]  note <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f61b.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f61b.png?v8">😛</span>  同时删除2个</h5><h5 id="10-清除屏幕命令-cls"><a href="#10-清除屏幕命令-cls" class="headerlink" title="10. 清除屏幕命令 cls"></a>10. 清除屏幕命令 <code>cls</code></h5><h5 id="11-改变当前盘符命令d"><a href="#11-改变当前盘符命令d" class="headerlink" title="11. 改变当前盘符命令d:"></a>11. 改变当前盘符命令d:</h5><h5 id="12-查看环境变量path-or-echo-path"><a href="#12-查看环境变量path-or-echo-path" class="headerlink" title="12. 查看环境变量path  or  echo %path%"></a>12. 查看环境变量<code>path</code>  or  echo %path%</h5><h3 id="3-Java-开发环境的准备"><a href="#3-Java-开发环境的准备" class="headerlink" title="3.Java 开发环境的准备"></a>3.Java 开发环境的准备</h3><h4 id="1-Java语言发展史"><a href="#1-Java语言发展史" class="headerlink" title="1. Java语言发展史"></a>1. Java语言发展史</h4><ul><li>詹姆斯.高斯林(James Gosling) 1977年获得了加拿大卡尔加里大学计算机科学学士学位，1983年获得 了<code>美国卡内基梅隆大学</code>计算机科学博士学位，毕业后到IBM工作，设计IBM第一代工作站NeWS系统， 但不受重视。后来转至Sun公司，1990年， 与Patrick, Naughton和Mike Sheridan等人合作“绿色计划”，后来发展一套语言叫做“Oak” ，后改名为Java。</li><li>SUN (Stanford Uni versity Network, 斯坦福大学网络公司)</li><li>卡内基梅隆大学截至2017年卡耐基梅隆大学共培养出了12个图灵奖，20个诺贝尔奖，9个奥斯卡，114个艾米奖，44个托尼奖，非常牛逼的大学。</li><li>Java是一 门软件编程语言，可编写桌面应用程序、Web应用程序、分布式系统和嵌入式系统应用程序等</li><li>早期Sun公司研发 人员对C++进行改造，开发了一种称为Oak的面向对象语言</li><li>1995年，Sun公司将Oak更名为Java</li><li>1996年，Sun公司发布了Java的第一个开发工具包(JDK1.0)</li><li>1998年，第二代Java平台的企业版J2EE发布</li><li>1999年公司发布了第二代Java平台(简称为Java2)的3个版本<br>J2ME (Java2 Micro Edition, Java2平 台的微型版)，应用于移动、无线及有限资源的环境;<br>J2SE (Java 2 Standard Edition, Java 2平台的标准版)，应用于桌面环境;<br>J2EE (Java 2Enterprise Edition, Java 2平台的企业版)，应用于基于Java的应用服务器。</li><li>Java 2平台的发布，是Java发展过程中最重要的一个里程碑，标志着Java的应用开始普及。</li><li>2009年，甲骨文公司宣布收购Sun。</li><li>2010年，Java编程语言的共同创始人之一詹姆斯.高斯林(Java之父)从Oracle公司辞职。</li><li>2011年，甲骨文公司举行了全球性的活动，以庆祝Java7的推出，随后Java7正式发布。</li><li>2014年，甲骨文公司发布了Java8正式版。</li><li>2017年，甲骨文公司发布了Java9</li></ul><h4 id="2-Java语言版本"><a href="#2-Java语言版本" class="headerlink" title="2. Java语言版本"></a>2. Java语言版本</h4><p>   <img src="/2019/05/17/java1/1_6.png" alt="1586911661427"></p><p>老版本稳定，追求稳定</p><h4 id="3-Java语言特点"><a href="#3-Java语言特点" class="headerlink" title="3. Java语言特点"></a>3. Java语言特点</h4><p>​        简单性、解释性、<code>面向对象</code>、<code>高性能</code>、分布式处理、多线程、健壮性、动态性、<code>安全性</code>、<code>跨平台</code>、移植性<br>注:这是一道笔记题，需要记住</p><h4 id="4-Java语言跨平台原理"><a href="#4-Java语言跨平台原理" class="headerlink" title="4. Java语言跨平台原理"></a>4. Java语言跨平台原理</h4><h5 id="4-1-什么是跨平台性"><a href="#4-1-什么是跨平台性" class="headerlink" title="4.1 什么是跨平台性"></a>4.1 什么是跨平台性</h5><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开发的软件在任何操作系统(mac/window/linux)上都能安装并运行</span><br></pre></td></tr></tbody></table></figure><h5 id="4-2-Java语言跨平台原理"><a href="#4-2-Java语言跨平台原理" class="headerlink" title="4.2 Java语言跨平台原理"></a>4.2 Java语言跨平台原理</h5><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">只要在需要运行java应用程序的操作系统上，先安装一个Java虚拟机(JVM Java Virtual Machine) 即可。由JVM来负责Java程序在该系统中的运行。</span><br></pre></td></tr></tbody></table></figure><h5 id="4-3-Java语言跨平台图解"><a href="#4-3-Java语言跨平台图解" class="headerlink" title="4.3 Java语言跨平台图解"></a>4.3 Java语言跨平台图解</h5><p><img src="/2019/05/17/java1/1_7.png" alt="1586911661427"></p><h5 id="4-4-write-once-，run-anywhere-一处编译-到处运行"><a href="#4-4-write-once-，run-anywhere-一处编译-到处运行" class="headerlink" title="4.4 write once ，run anywhere!(一处编译,到处运行)"></a>4.4 write once ，run anywhere!(一处编译,到处运行)</h5><h4 id="5-JRE和JDK的概述"><a href="#5-JRE和JDK的概述" class="headerlink" title="5. JRE和JDK的概述"></a>5. JRE和JDK的概述</h4><h5 id="5-1-什么是JRE-Java-Runtime-Environment"><a href="#5-1-什么是JRE-Java-Runtime-Environment" class="headerlink" title="5.1 什么是JRE (Java Runtime Environment)"></a>5.1 什么是JRE (Java Runtime Environment)</h5><ul><li>JRE包括Java虛拟机(JVM Java Virtual Machine)和Java程序所需的核心类库(jar 包)等</li><li>如果想要运行一个开发好的Java程序，计算机中只需要安装JRE即可。（java-&gt;jar）</li><li>总的说JRE = JVM +核心类库</li></ul><h5 id="5-2-什么是JDK-Java-Development-Kit"><a href="#5-2-什么是JDK-Java-Development-Kit" class="headerlink" title="5.2 什么是JDK (Java Development Kit)"></a>5.2 什么是JDK (Java Development Kit)</h5><ul><li>JDK是提供给Java开发人员使用的，其中包含了java的开发工具，也包括了JRE。</li><li><code>所以安装了JDK,就不用在单独安装JRE了</code>。</li><li>java的开发工具有:<code>编译工具(javac)</code>、 <code>打包工具(jar)</code>等</li><li>JDK=JRE+JAVA的开发工具。</li><li>JDK=JVM+核心类库+ Java开发工具(javac, jar..)</li></ul><h5 id="5-3-JDK-JRE-JVM的作用和关系"><a href="#5-3-JDK-JRE-JVM的作用和关系" class="headerlink" title="5.3 JDK, JRE, JVM的作用和关系"></a>5.3 JDK, JRE, JVM的作用和关系</h5><p>  JDK包含JRE，而JRE包含JVM， 总的来说JDK是用于java程序的开发，而jre则是只</p><h5 id="5-4-能运行class而没有编译的功能，最后用张网络图片总结下"><a href="#5-4-能运行class而没有编译的功能，最后用张网络图片总结下" class="headerlink" title="5.4 能运行class而没有编译的功能，最后用张网络图片总结下"></a>5.4 能运行class而没有编译的功能，最后用张网络图片总结下</h5><p> <img src="/2019/05/17/java1/1_8.png" alt="1586911661427"></p><ul><li>总结:<br>JDK:主要用于编译<br>JRE:主要作用看运行效果<br>JVM:主要作用跨平台，负责Java程序的调用</li></ul><h4 id="6-JDK的下载和安装过程图解"><a href="#6-JDK的下载和安装过程图解" class="headerlink" title="6. JDK的下载和安装过程图解"></a>6. JDK的下载和安装过程图解</h4><h5 id="6-1-JDK的下载地址"><a href="#6-1-JDK的下载地址" class="headerlink" title="6.1 JDK的下载地址"></a>6.1 JDK的下载地址</h5><ul><li><code>https://www.oracle.com/java/technologies/javase-downloads.html</code></li><li>Sun被oracle收购，地址都可以，访问sun会跳转到oracle</li></ul><h5 id="6-2-JDK的安装"><a href="#6-2-JDK的安装" class="headerlink" title="6.2 JDK的安装"></a>6.2 JDK的安装</h5><p>  下载对应操作系统平台的JDK,这里下载1.8的windows平台然后傻瓜式安装，下一步下一步<br>  验证安装是否成功</p><ul><li><p>如果安装 了JDK, JDK的安装路径在C: \Program Files\Java\jdk1.8.0_ 131路径下</p></li><li><p>在cmd中可以输入java -version来查看jdk的版本</p><p>可安装共存:1.7和 1.8 共存</p></li></ul><h4 id="7-JDK的删除和自定义安装路径"><a href="#7-JDK的删除和自定义安装路径" class="headerlink" title="7. JDK的删除和自定义安装路径"></a>7. JDK的删除和自定义安装路径</h4><ol><li>删除JDK不能直接把Java的home目录文件夹删除了，这种操作是不正确</li><li>正确的删除JDK是要来到 “ 控制面板\所有控制面板项\程序和功能”进行删除，</li><li>JDK安装路径可以自己定义， 个人喜好，我就不喜欢改。</li><li>什么时候需要更改jdk的安装路径<br>■当默认的c盘没有空 间的时候，可以改成D盘</li></ol><h4 id="8-JDK安装路径下的目录解释"><a href="#8-JDK安装路径下的目录解释" class="headerlink" title="8. JDK安装路径下的目录解释"></a>8. JDK安装路径下的目录解释</h4><ul><li>在jdk的Home中，会有如下图的结构<br><img src="/2019/05/17/java1/1_9.png" alt="1586911661427"><ul><li>Home 目录路径C: \Program Fi les\JavaXjdk1.8.0131,又称jdk主目录<ul><li>bin:该目录用于存放一些可执行程序，如javac ( java编译器)、java(java运行 工具)，jar(打包工具)和javadoc(文档生成工具)等</li><li>db:db目录是一个小型的数据库，从JDK 6. 0开始，Java中引用了一个新的成员JavaDB, 这是一个纯Java实现、开源的数据库管理系统。这个数据库不仅轻便，而且支持JDBC 4. 0所有的规范，在学习JDBC 时，不再需要额外地安装一个数据库软件，选择直接使用JavaDB即可。</li><li>jre: “jre”是Java Runt ime Environment 的缩写，意为Java程序运行时环境。此目录是Java运行时环境的根目录，它包括Java虚拟机，运行时的类包，Java应用启动器以及-个bin目录，但不包含开发环境中的开发工具。</li><li>include: 由于JDK是通过C和C++实现的，因此在启动时需要引入一些C语言的头文件，该目录就是用于存放这些头文件的。</li><li>1ib: 1ib是1ibrary的缩写， 意为Java 类库或库文件，是开发工具使用的归档包文件。</li><li>src. zip文件: src. zip为src文件夹的压缩文件，src中放置的是JDK核心类的源代码， 通过该文件可以查看Java基础类的源代码。</li></ul></li></ul></li></ul><h4 id="9-第一个Java程序，-Hel-loWord案例的编写与编译-命令行方式"><a href="#9-第一个Java程序，-Hel-loWord案例的编写与编译-命令行方式" class="headerlink" title="9.第一个Java程序， Hel loWord案例的编写与编译(命令行方式)"></a>9.第一个Java程序， Hel loWord案例的编写与编译(命令行方式)</h4><ul><li><p>编写Java源代码，以.java结尾<br><img src="/2019/05/17/java1/1_10.png" alt="1586911661427"></p></li><li><p>打开终端cmd,进入到jdk的bin目录，cd “C:\ Program Files\Java\jdk1.8.0_ 131\bin”</p></li><li><p>编译java文件，终端中输入javac HelloWorld.java的全路径</p></li><li><p>执行class文件,终端输入java HelloWorld,不需要加.class后缀<br>Java程序运行流程[记住]<br>①编写java文件<br>②编译java文件，获得一个.class文件<br>③运行.class文件 看到效果</p></li><li><p>遇到问题</p><p><img src="/2019/05/17/java1/1_11.png" alt="1586920600288"></p></li></ul><h4 id="10-Javac-amp-Java命令执行的路径"><a href="#10-Javac-amp-Java命令执行的路径" class="headerlink" title="10. Javac&amp;Java命令执行的路径"></a>10. Javac&amp;Java命令执行的路径</h4><ul><li>Javac是一个将. java编译成. class文件命令</li><li>javac命令的具体路径是C: \Program Files\Java\jdk1. 8.0_ 131bin</li><li>在终端cmd输入java - version, Java的命令执行的路径是在Path的<br>C: \PrbgramData \0racl e\Java\javapath</li><li>如果在命令行执行javac HelloWorld. java 返回‘javac’ 不是内部或外部命令，也不是可运行的程序，或批处理文件。说明在当前路径找不到Javac命令</li></ul><h4 id="11-Java环境变量Path配置"><a href="#11-Java环境变量Path配置" class="headerlink" title="11. Java环境变量Path配置"></a>11. Java环境变量Path配置</h4><ul><li>目的: 不需要进入到bin目录，也可执行bin目录下的命令javac</li><li>方法步骤- windows10的操作:</li></ul><ol><li>点击:此电脑-右键属性-高级系统设置-高级-环境变量</li><li>在系统变量中新建JAVA_ HOME=C: \Program Files\Java\jdk1.8.0_ 131</li><li>在系统变量中编辑Path,在后面追加路径%JAVA_ HOME%\bin (注:是右斜杠)</li><li>在命令行可以输入echo %JAVA HOME%\bin 来查看环境变量</li></ol><ul><li>通过上面的努力， 你就可以在任意目录编译. java文件了<br>MacOs：  .bash_profile</li></ul><h4 id="12-CLASSPATH变量配置"><a href="#12-CLASSPATH变量配置" class="headerlink" title="12. CLASSPATH变量配置"></a>12. CLASSPATH变量配置</h4><ul><li>jvm在 查找class文件时如果没有设置classpath会在当前路径查找，设置classpath后<code>仅在classpath路径下</code>查找class文件即可。</li><li>classpath 不是必须配置的</li><li>一旦修改了环境变量的东西，一定要重新启动cmd命令行<br>echo %classpath%<br>补: cd.. 切换到上一个路径</li></ul><h3 id="4-Java开发工具Eclipse"><a href="#4-Java开发工具Eclipse" class="headerlink" title="4. Java开发工具Eclipse"></a>4. Java开发工具Eclipse</h3><h4 id="1-常用的Java-IDE开发工具"><a href="#1-常用的Java-IDE开发工具" class="headerlink" title="1. 常用的Java IDE开发工具"></a>1. 常用的Java IDE开发工具</h4><ul><li>为什么会有Java IDE开发工具，如果像以前那样在终端通过命令行来编译执行java文件，一旦<br>文件比较多，是件多么折腾的一件事。所以有很多开发工具，来简化我们的开发工作。</li><li>集成开发环境(IDE， Integrated Deve lopment Environment )是用于提供程序开发环境的应用程序，一般包括代码编辑器、编译器、调试器和图形用户界面等工具。</li><li>常见的Java开发工具有，工作中掌握Eclipse即可<br>①Editplus 少<br>②Sublime Text  少<br>③Eclipse (工作中常用，200多M)  免费<br>④MyEclipse(至 少1G)<br>⑤IntelliJ IDEA (500多M)  多</li><li>注:掌握了Eclipse, MyEclipse, IDEA也自然会用，因为他们长的两差不多</li></ul><h4 id="2-Eclipse历史版本-Neon"><a href="#2-Eclipse历史版本-Neon" class="headerlink" title="2. Eclipse历史版本  Neon"></a>2. Eclipse历史版本  Neon</h4><p> <img src="/2019/05/17/java1/1_12.png" alt="1586920600288"></p><h4 id="3-Eclipse的下载与安装"><a href="#3-Eclipse的下载与安装" class="headerlink" title="3. Eclipse的下载与安装"></a>3. Eclipse的下载与安装</h4><ul><li>进入eclipse的 下载页面<code>https://www.eclipse.org/downloads/packages/</code></li><li>然后在页面中，选择红色框的下载，下载后得到一个eclipse-jee neon-3-win32-<br>x86_ 64.zip文 件</li><li>然后解压zip,直接点击解压后文件夹中的eclipse.exe即可使用 -&gt;发送快捷方式<br>注意:下载Eclipse-Neon的版本，一定要安装jdk1.8<br>现在最新版本是eclipse-jee -oxygen-1a-win32 x86_ 64.zip [oxygen:氧气 ]<br>建议项目名格式 wzq_day01_20170206</li></ul><h4 id="3-Eclipse的区域与字体调整"><a href="#3-Eclipse的区域与字体调整" class="headerlink" title="3. Eclipse的区域与字体调整"></a>3. Eclipse的区域与字体调整</h4><p> <img src="/2019/05/17/java1/1_14.png" alt="1586920600288"></p><ul><li>调整Eclipse的字体大小<ul><li>第一种方式:<ul><li>点击Eclipse的Window Prefernces偏好设置，</li><li>找到General-Appearance Colors and Fonts. 再找到Basic </li><li>然后点击Text Font来 调字体大小</li></ul></li><li>第二种方式:<ul><li>neon<br>版本的eclipse可以通过[ctrl +、-]来更改文字大小<br>注:有些旧版本不支持这种方式，所以只能使用第一种</li></ul></li></ul></li></ul><h4 id="4-项目的导入和删除"><a href="#4-项目的导入和删除" class="headerlink" title="4.项目的导入和删除"></a>4.项目的导入和删除</h4><p>Project Explorer 下 选择 import -&gt;General-&gt;Existing Projects into Workspace</p><p>注释 ctrl+shift+/<br>ctrl+/</p><h4 id=""><a href="#" class="headerlink" title=""></a></h4><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>面向对象(上)</title>
      <link href="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/"/>
      <url>/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/</url>
      
        <content type="html"><![CDATA[<h4 id="Java语言的基本元素-类与对象"><a href="#Java语言的基本元素-类与对象" class="headerlink" title="Java语言的基本元素 类与对象"></a>Java语言的基本元素 类与对象</h4><h3 id="5-面向对象的思想概述"><a href="#5-面向对象的思想概述" class="headerlink" title="5. 面向对象的思想概述"></a>5. 面向对象的思想概述</h3><ul><li>类(Class)和对象(Object)是面向对象的核心概念。<ul><li>类是对一类事物的描述，是抽象的、概念上的定义</li><li>对象是实际存在的该类事物的每个个体，因而也称为实例(instance)。</li></ul></li><li>万事万物皆对象<br><img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_1.png" alt="例子"></li></ul><ul><li><p>可以理解为:<code>类=抽象概念的人</code>;<code>对象=实实在在的某个人</code></p></li><li><p>面向对象程序设计的重点是<code>类的设计</code>（图纸）</p></li><li><p>类的设计，其实就是类的成员的设计</p></li></ul><hr><h3 id="6-类的结构-属性和方法"><a href="#6-类的结构-属性和方法" class="headerlink" title="6.类的结构: 属性和方法"></a>6.类的结构: 属性和方法</h3><h4 id="Java类及类的成员"><a href="#Java类及类的成员" class="headerlink" title="Java类及类的成员"></a>Java类及类的成员</h4><ul><li>现实世界的生物体，大到鲸鱼，小到蚂蚁，都是由最基本的<code>细胞</code>构成的。同理，Java代码世界是由诸多个不同功能的<code>类</code>构成的。</li><li>现实生物世界中的细胞又是由什么构成的呢?细胞核、细胞质、..那么,<br>Java中用<code>类class</code>来描述事物也是如此。常见的类的成员有:<ul><li>属性:对应类中的成员变量</li><li>行为:对应类中的成员方法</li></ul></li><li>Field=属性=成员变量=域，字段，Method= (成员)方法=函数<br>eg： 生活中描述事物无非就是描述事物的属性和行为。如:人有身高，体重等属性，有说话,打球等行为。<br>类的成员构成version 1.0<br><img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_2.png" alt="简单版"></li></ul><p>类的成员构成version 2.0 </p><h2 id=""><a href="#" class="headerlink" title=""></a><img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_3.png" alt="完整版"></h2><h3 id="7-类和对象的创建"><a href="#7-类和对象的创建" class="headerlink" title="7.类和对象的创建"></a>7.类和对象的创建</h3><p><img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_4.png" alt="引入"></p><ul><li><p>创建类的对象=类的实例化=实例化类</p></li><li><p>创建对象语法： 类名 对象名 = new 类名();</p></li><li><p>使用“对象名.对象成员”的方式访问对象成员（包括属性和方法）</p></li><li><p>二、类和对象的使用(面向对象思想落地的实现)</p><ol><li>创建类，设计类的成员（多）</li><li>创建类的对象</li><li>通过““对象.属性或“对象.方法”调用对象的结构<figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>{</span><br><span class="line"><span class="comment">//属性</span></span><br><span class="line">String name;</span><br><span class="line"><span class="keyword">int</span> age = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">boolean</span> isMale;</span><br><span class="line"><span class="comment">//方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">eat</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">System.out.println(<span class="string">"人可以吃饭"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sleep</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">System.out.println(<span class="string">"人可以睡觉"</span>);</span><br><span class="line">}</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">talk</span><span class="params">(String language)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">System.out.println(<span class="string">"人可以说话,使用的是: "</span> + language);</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//测试类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonTest</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="comment">//创建Person类的对象</span></span><br><span class="line">Person p1 = <span class="keyword">new</span> Person( ) ;</span><br><span class="line"><span class="comment">//Scanner scanner = new Scanner(System.in);</span></span><br><span class="line"><span class="comment">//调用对象的结构:属性、方法</span></span><br><span class="line"><span class="comment">//调用属性:“对象.属性”</span></span><br><span class="line">p1.name = <span class="string">"Tom"</span>;</span><br><span class="line">p1. isMale = <span class="keyword">true</span>;</span><br><span class="line">System. out . println(p1. name);</span><br><span class="line"><span class="comment">//调用方法:“对象。方法”</span></span><br><span class="line">p1.eat();</span><br><span class="line">p1.sleep();</span><br><span class="line">p1. talk(<span class="string">"Chinese"</span>);</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="8-对类和对象创建的再理解"><a href="#8-对类和对象创建的再理解" class="headerlink" title="8.对类和对象创建的再理解"></a>8.对类和对象创建的再理解</h3>有了对象反推出类—&gt;反射<h3 id="9-类多个对象的关系"><a href="#9-类多个对象的关系" class="headerlink" title="9.类多个对象的关系"></a>9.类多个对象的关系</h3>==   打比方   简历的模板 ，谁填是谁的信息</li></ol></li><li><p>如果创建了一个类的多个对象，则每个对象都独立的拥有一套类的属性。(非static的)</p></li><li><p>意味着:如果我们修改一个对象的属性a，则不影响另外一个对象属性a的值。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将p1变量保存的对象地址值赋给p3 ,导致p1和p3指向了堆空间中的同一个对象实体。</span></span><br><span class="line">Person p3=p1;</span><br><span class="line">System. out. println(p3.name);/ /Tom</span><br></pre></td></tr></tbody></table></figure><h3 id="10-对象的内存解析"><a href="#10-对象的内存解析" class="headerlink" title="10.对象的内存解析"></a>10.对象的内存解析</h3><p><img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_5.png" alt="内存解析"></p></li></ul><p>方法中定义的变量都是局部变量</p><p><img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_6.png" alt="完整版"></p><h3 id="11-属性与局部变量的对比11-12"><a href="#11-属性与局部变量的对比11-12" class="headerlink" title="11.属性与局部变量的对比11-12"></a>11.属性与局部变量的对比11-12</h3><p>属性(成员变量)  VS 局部变量 （打比方 放的位置不同 蜂王和工蜂）</p><p>1.相同点</p><ul><li>定义变量的格式:数据类型变量名=变量值</li><li>先声明，后作用</li><li>变量都有其对应的作用域、</li></ul><p>2.不同点</p><ul><li><p>在类中声明的位置的不同</p><ul><li>属性：直接定义在类的一对{}内<ul><li>局部变量：声明在方法内、方法形参、代码块内、构造器形参、构造器内部的变量<br> <img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_7.png" alt="局部变量的位置举例子"></li><li>关于权限修饰符的不同</li></ul></li><li>属性：可以在声明属性时，指明其权限，使用权限修饰符。<pre><code>常用的权限修饰符：private、public、缺省、protected  ---&gt;封装性   作用域的大小  目前，大家声明属性时，都使用缺省就可以了。</code></pre><img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_8.png" alt="成员变量权限修饰符举例子"></li><li>局部变量：不可以使用权限修饰符，并没有默认初始化值（也就是理解方法代替了）</li></ul></li><li><p>默认初始化值的情况:</p><ul><li><p>属性:类的属性，根据其类型，都有默认初始化值。<br>整型(byte、short、int、long):0<br>浮点型(float、double) 0.0<br>字符型(char):0或’\u0000’ )<br>布尔型(boolean) : false<br>引用数据类型(类、数组、接口) : null<br><img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_9.png" alt="属性的默认值举例子"></p></li><li><p>局部变量:没有默认初始化值。<br>意味着，我们在调用局部变量之前，一定要显式赋值。<br>特别地:形参在调用时，我们赋值即可。（下图）<br><img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_10.png" alt="形参在调用时，我们赋值"></p></li><li><p>在内存中加载的位置:<br>属性:加载到堆空间中(非static 存在 方法区)<br>局部变量:加载到栈空间</p></li></ul></li></ul><h3 id="13-类中方法举例与声明的格式"><a href="#13-类中方法举例与声明的格式" class="headerlink" title="13. 类中方法举例与声明的格式"></a>13. 类中方法举例与声明的格式</h3><p>方法：描述类应该具有的功能<br>比如 Math类的sqrt()</p><ol><li><p>举例<br>public void eat(){}<br>public void sleep(int hour){}<br>public String getName(){}<br>public String getNation(String nation){}</p></li><li><p>方法的声明：<br>权限修饰符  返回值类型  方法名(形参列表){  方法体 };<br>注意：static、final、abstract 来修饰的方法，后面再讲。</p><h3 id="14-方法声明的说明14-15"><a href="#14-方法声明的说明14-15" class="headerlink" title="14. 方法声明的说明14-15"></a>14. 方法声明的说明14-15</h3><ol start="3"><li>说明：</li></ol><ul><li><p>3.1 关于权限修饰符：默认方法的权限修饰符先都使用public<br>Java规定的4种权限修饰符：private、public、缺省、protected  –&gt;封装性再细说</p></li><li><p>3.2 返回值类型： 有返回值 vs 没有返回值</p><ul><li>如果方法<code>有</code>返回值，则必须在方法声明时，指定返回值的类型。同时，方法中，需要使用return关键字来返回指定类型的变量或常量：“return 数据”。</li><li>如果方法<code>没有</code>返回值，则方法声明时，使用void来表示。通常，没有返回值的方法中，就不需要使用return.但是，如果使用的话，只能“return;”表示结束此方法的意思。</li><li>3.2.2 我们定义方法该不该有返回值？<br>① 题目要求② 凭经验：具体问题具体分析</li></ul></li><li><p>3.3 方法名：属于标识符，遵循标识符的规则和规范，“见名知意”</p></li><li><p>3.4 形参列表： 方法可以声明0个，1个或多个形参。</p></li><li><p>3.5 方法体：方法功能的体现。 </p><h3 id="16-return关键字的使用"><a href="#16-return关键字的使用" class="headerlink" title="16 return关键字的使用"></a>16 return关键字的使用</h3></li></ul></li><li><p>return关键字的使用：</p></li></ol><ul><li><p>1.使用范围：使用在方法体中</p><ul><li>2.作用：① 结束方法 ② 针对于有返回值类型的方法，使用”return 数据”方法返回所要的数据。</li><li>3.注意点：return关键字后面不可以声明执行语句。<h3 id="17-方法使用中的注意点"><a href="#17-方法使用中的注意点" class="headerlink" title="17. 方法使用中的注意点"></a>17. 方法使用中的注意点</h3></li></ul></li></ul><ol start="5"><li>方法的使用中，可以调用当前类的属性或方法<br>特殊的：方法A中又调用了方法A:递归方法。<br>方法中，不可以定义方法。<br> <img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_11.png" alt="方法中，不可以定义方法。"></li></ol><h3 id="18-19-20-类的设计-练习"><a href="#18-19-20-类的设计-练习" class="headerlink" title="18-19-20. 类的设计 练习"></a>18-19-20. 类的设计 练习</h3><h3 id="21-22"><a href="#21-22" class="headerlink" title="21-22"></a>21-22</h3><p> <img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_12.png" alt="题4-5"></p><p> test  类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 4. 对象数组题目：</span></span><br><span class="line"><span class="comment">定义类Student，包含三个属性：学号number(int)，年级state(int)，成绩score(int)。</span></span><br><span class="line"><span class="comment"> 创建20个学生对象，学号为1到20，年级和成绩都由随机数确定。</span></span><br><span class="line"><span class="comment">问题一：打印出3年级(state值为3）的学生信息。</span></span><br><span class="line"><span class="comment">问题二：使用冒泡排序按学生成绩排序，并遍历所有学生信息</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">提示：</span></span><br><span class="line"><span class="comment">1) 生成随机数：Math.random()，返回值类型double;  </span></span><br><span class="line"><span class="comment">2) 四舍五入取整：Math.round(double d)，返回值类型long。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentTest</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"><span class="comment">//Student s1 = new Student();</span></span><br><span class="line"><span class="comment">//Student s1 = new Student();</span></span><br><span class="line"><span class="comment">//Student s1 = new Student();</span></span><br><span class="line"><span class="comment">//Student s1 = new Student();</span></span><br><span class="line"><span class="comment">//Student s1 = new Student();</span></span><br><span class="line"><span class="comment">//Student s1 = new Student();</span></span><br><span class="line"><span class="comment">//声明Student类型的数组</span></span><br><span class="line">Student[] stus = <span class="keyword">new</span> Student[<span class="number">20</span>];  <span class="comment">//String[] arr = new String[10];</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; stus.length;i++){</span><br><span class="line"><span class="comment">//给数组元素赋值</span></span><br><span class="line">stus[i] = <span class="keyword">new</span> Student();</span><br><span class="line"><span class="comment">//给Student对象的属性赋值</span></span><br><span class="line">stus[i].number = (i + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//年级：[1,6]</span></span><br><span class="line">stus[i].state = (<span class="keyword">int</span>)(Math.random() * (<span class="number">6</span> - <span class="number">1</span> + <span class="number">1</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//成绩：[0,100]</span></span><br><span class="line">stus[i].score = (<span class="keyword">int</span>)(Math.random() * (<span class="number">100</span> - <span class="number">0</span> + <span class="number">1</span>));</span><br><span class="line">}</span><br><span class="line"><span class="comment">//遍历学生数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;stus.length;i++){</span><br><span class="line"><span class="comment">//System.out.println(stus[i].number + "," + stus[i].state </span></span><br><span class="line"><span class="comment">//+ "," + stus[i].score);</span></span><br><span class="line">System.out.println(stus[i].info());</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"********************"</span>);</span><br><span class="line"><span class="comment">//问题一：打印出3年级(state值为3）的学生信息。</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;stus.length;i++){</span><br><span class="line"><span class="keyword">if</span>(stus[i].state == <span class="number">3</span>){</span><br><span class="line">System.out.println(stus[i].info());</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">System.out.println(<span class="string">"********************"</span>);</span><br><span class="line"><span class="comment">//问题二：使用冒泡排序按学生成绩排序，并遍历所有学生信息</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; stus.length - <span class="number">1</span>;i++){</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; stus.length - <span class="number">1</span> - i;j++){</span><br><span class="line"><span class="keyword">if</span>(stus[j].score &gt; stus[j + <span class="number">1</span>].score){</span><br><span class="line"><span class="comment">//如果需要换序，交换的是数组的元素：Student对象！！！</span></span><br><span class="line">Student temp = stus[j];</span><br><span class="line">stus[j] = stus[j + <span class="number">1</span>];</span><br><span class="line">stus[j + <span class="number">1</span>] = temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">//遍历学生数组</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;stus.length;i++){</span><br><span class="line">System.out.println(stus[i].info());</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span>{</span><br><span class="line"><span class="keyword">int</span> number;<span class="comment">//学号</span></span><br><span class="line"><span class="keyword">int</span> state;<span class="comment">//年级</span></span><br><span class="line"><span class="keyword">int</span> score;<span class="comment">//成绩</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//显示学生信息的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">info</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="string">"学号："</span> + number + <span class="string">",年级："</span> + state + <span class="string">",成绩："</span> + score;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 4. 对象数组题目：     </span></span><br><span class="line"><span class="comment">定义类Student，包含三个属性：学号number(int)，年级state(int)，成绩score(int)。</span></span><br><span class="line"><span class="comment"> 创建20个学生对象，学号为1到20，年级和成绩都由随机数确定。</span></span><br><span class="line"><span class="comment">问题一：打印出3年级(state值为3）的学生信息。</span></span><br><span class="line"><span class="comment">问题二：使用冒泡排序按学生成绩排序，并遍历所有学生信息</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">提示：</span></span><br><span class="line"><span class="comment">1) 生成随机数：Math.random()，返回值类型double;  </span></span><br><span class="line"><span class="comment">2) 四舍五入取整：Math.round(double d)，返回值类型long。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 此代码是对StudentTest.java的改进：将操作数组的功能封装到方法中。</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentTest1</span> </span>{</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line"></span><br><span class="line"><span class="comment">//声明Student类型的数组</span></span><br><span class="line">Student1[] stus = <span class="keyword">new</span> Student1[<span class="number">20</span>];  </span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; stus.length;i++){</span><br><span class="line"><span class="comment">//给数组元素赋值</span></span><br><span class="line">stus[i] = <span class="keyword">new</span> Student1();</span><br><span class="line"><span class="comment">//给Student对象的属性赋值</span></span><br><span class="line">stus[i].number = (i + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//年级：[1,6]</span></span><br><span class="line">stus[i].state = (<span class="keyword">int</span>)(Math.random() * (<span class="number">6</span> - <span class="number">1</span> + <span class="number">1</span>) + <span class="number">1</span>);</span><br><span class="line"><span class="comment">//成绩：[0,100]</span></span><br><span class="line">stus[i].score = (<span class="keyword">int</span>)(Math.random() * (<span class="number">100</span> - <span class="number">0</span> + <span class="number">1</span>));</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">StudentTest1 test = <span class="keyword">new</span> StudentTest1();</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历学生数组</span></span><br><span class="line">test.print(stus);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"********************"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//问题一：打印出3年级(state值为3）的学生信息。</span></span><br><span class="line">test.searchState(stus, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"********************"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//问题二：使用冒泡排序按学生成绩排序，并遍历所有学生信息</span></span><br><span class="line">test.sort(stus);</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历学生数组</span></span><br><span class="line">test.print(stus);</span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>  遍历Student1[]数组的操作</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shkstart</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019年1月15日下午5:10:19</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> stus</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(Student1[] stus)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;stus.length;i++){</span><br><span class="line">System.out.println(stus[i].info());</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 查找Stduent数组中指定年级的学生信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shkstart</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019年1月15日下午5:08:08</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> stus 要查找的数组</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> state 要找的年级</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">searchState</span><span class="params">(Student1[] stus,<span class="keyword">int</span> state)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;stus.length;i++){</span><br><span class="line"><span class="keyword">if</span>(stus[i].state == state){</span><br><span class="line">System.out.println(stus[i].info());</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span> 给Student1数组排序</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> shkstart</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019年1月15日下午5:09:46</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> stus</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Student1[] stus)</span></span>{</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; stus.length - <span class="number">1</span>;i++){</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>;j &lt; stus.length - <span class="number">1</span> - i;j++){</span><br><span class="line"><span class="keyword">if</span>(stus[j].score &gt; stus[j + <span class="number">1</span>].score){</span><br><span class="line"><span class="comment">//如果需要换序，交换的是数组的元素：Student对象！！！</span></span><br><span class="line">Student1 temp = stus[j];</span><br><span class="line">stus[j] = stus[j + <span class="number">1</span>];</span><br><span class="line">stus[j + <span class="number">1</span>] = temp;</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student1</span></span>{</span><br><span class="line"><span class="keyword">int</span> number;<span class="comment">//学号</span></span><br><span class="line"><span class="keyword">int</span> state;<span class="comment">//年级</span></span><br><span class="line"><span class="keyword">int</span> score;<span class="comment">//成绩</span></span><br><span class="line"><span class="comment">//显示学生信息的方法</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">info</span><span class="params">()</span></span>{</span><br><span class="line"><span class="keyword">return</span> <span class="string">"学号："</span> + number + <span class="string">",年级："</span> + state + <span class="string">",成绩："</span> + score;</span><br><span class="line">}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>  <img src="/2016/05/18/2016-06-10-mian-xiang-dui-xiang-shang/8_13.png" alt="内存解析图"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 面向对象 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
